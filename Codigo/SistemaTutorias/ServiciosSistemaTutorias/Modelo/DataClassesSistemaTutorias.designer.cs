#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Este código fue generado por una herramienta.
//     Versión de runtime:4.0.30319.42000
//
//     Los cambios en este archivo podrían causar un comportamiento incorrecto y se perderán si
//     se vuelve a generar el código.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiciosSistemaTutorias.Modelo
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="SistemaTutorias")]
	public partial class DataClassesSistemaTutoriasDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Definiciones de métodos de extensibilidad
    partial void OnCreated();
    partial void InsertAcademicos(Academicos instance);
    partial void UpdateAcademicos(Academicos instance);
    partial void DeleteAcademicos(Academicos instance);
    partial void InsertAreasAcademicas(AreasAcademicas instance);
    partial void UpdateAreasAcademicas(AreasAcademicas instance);
    partial void DeleteAreasAcademicas(AreasAcademicas instance);
    partial void InsertCategoriasProblematica(CategoriasProblematica instance);
    partial void UpdateCategoriasProblematica(CategoriasProblematica instance);
    partial void DeleteCategoriasProblematica(CategoriasProblematica instance);
    partial void InsertEstudiantes(Estudiantes instance);
    partial void UpdateEstudiantes(Estudiantes instance);
    partial void DeleteEstudiantes(Estudiantes instance);
    partial void InsertExperienciasEducativas(ExperienciasEducativas instance);
    partial void UpdateExperienciasEducativas(ExperienciasEducativas instance);
    partial void DeleteExperienciasEducativas(ExperienciasEducativas instance);
    partial void InsertExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes instance);
    partial void UpdateExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes instance);
    partial void DeleteExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes instance);
    partial void InsertPeriodosEscolares(PeriodosEscolares instance);
    partial void UpdatePeriodosEscolares(PeriodosEscolares instance);
    partial void DeletePeriodosEscolares(PeriodosEscolares instance);
    partial void InsertProblematicasAcademicas(ProblematicasAcademicas instance);
    partial void UpdateProblematicasAcademicas(ProblematicasAcademicas instance);
    partial void DeleteProblematicasAcademicas(ProblematicasAcademicas instance);
    partial void InsertProgramasEducativos(ProgramasEducativos instance);
    partial void UpdateProgramasEducativos(ProgramasEducativos instance);
    partial void DeleteProgramasEducativos(ProgramasEducativos instance);
    partial void InsertReportesGenerales(ReportesGenerales instance);
    partial void UpdateReportesGenerales(ReportesGenerales instance);
    partial void DeleteReportesGenerales(ReportesGenerales instance);
    partial void InsertReportesTutoria(ReportesTutoria instance);
    partial void UpdateReportesTutoria(ReportesTutoria instance);
    partial void DeleteReportesTutoria(ReportesTutoria instance);
    partial void InsertRoles(Roles instance);
    partial void UpdateRoles(Roles instance);
    partial void DeleteRoles(Roles instance);
    partial void InsertRolesAcademicos(RolesAcademicos instance);
    partial void UpdateRolesAcademicos(RolesAcademicos instance);
    partial void DeleteRolesAcademicos(RolesAcademicos instance);
    partial void InsertTutoriasAcademicas(TutoriasAcademicas instance);
    partial void UpdateTutoriasAcademicas(TutoriasAcademicas instance);
    partial void DeleteTutoriasAcademicas(TutoriasAcademicas instance);
    partial void InsertTutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes instance);
    partial void UpdateTutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes instance);
    partial void DeleteTutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes instance);
    #endregion
		
		public DataClassesSistemaTutoriasDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSistemaTutoriasDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSistemaTutoriasDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClassesSistemaTutoriasDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Academicos> Academicos
		{
			get
			{
				return this.GetTable<Academicos>();
			}
		}
		
		public System.Data.Linq.Table<AreasAcademicas> AreasAcademicas
		{
			get
			{
				return this.GetTable<AreasAcademicas>();
			}
		}
		
		public System.Data.Linq.Table<CategoriasProblematica> CategoriasProblematica
		{
			get
			{
				return this.GetTable<CategoriasProblematica>();
			}
		}
		
		public System.Data.Linq.Table<Estudiantes> Estudiantes
		{
			get
			{
				return this.GetTable<Estudiantes>();
			}
		}
		
		public System.Data.Linq.Table<ExperienciasEducativas> ExperienciasEducativas
		{
			get
			{
				return this.GetTable<ExperienciasEducativas>();
			}
		}
		
		public System.Data.Linq.Table<ExperienciasEducativasEstudiantes> ExperienciasEducativasEstudiantes
		{
			get
			{
				return this.GetTable<ExperienciasEducativasEstudiantes>();
			}
		}
		
		public System.Data.Linq.Table<PeriodosEscolares> PeriodosEscolares
		{
			get
			{
				return this.GetTable<PeriodosEscolares>();
			}
		}
		
		public System.Data.Linq.Table<ProblematicasAcademicas> ProblematicasAcademicas
		{
			get
			{
				return this.GetTable<ProblematicasAcademicas>();
			}
		}
		
		public System.Data.Linq.Table<ProgramasEducativos> ProgramasEducativos
		{
			get
			{
				return this.GetTable<ProgramasEducativos>();
			}
		}
		
		public System.Data.Linq.Table<ReportesGenerales> ReportesGenerales
		{
			get
			{
				return this.GetTable<ReportesGenerales>();
			}
		}
		
		public System.Data.Linq.Table<ReportesTutoria> ReportesTutoria
		{
			get
			{
				return this.GetTable<ReportesTutoria>();
			}
		}
		
		public System.Data.Linq.Table<Roles> Roles
		{
			get
			{
				return this.GetTable<Roles>();
			}
		}
		
		public System.Data.Linq.Table<RolesAcademicos> RolesAcademicos
		{
			get
			{
				return this.GetTable<RolesAcademicos>();
			}
		}
		
		public System.Data.Linq.Table<TutoriasAcademicas> TutoriasAcademicas
		{
			get
			{
				return this.GetTable<TutoriasAcademicas>();
			}
		}
		
		public System.Data.Linq.Table<TutoriasAcademicasEstudiantes> TutoriasAcademicasEstudiantes
		{
			get
			{
				return this.GetTable<TutoriasAcademicasEstudiantes>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Academicos")]
	public partial class Academicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _NumPersonal;
		
		private string _Nombres;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _Correo;
		
		private string _Telefono;
		
		private EntitySet<ExperienciasEducativas> _ExperienciasEducativas;
		
		private EntitySet<RolesAcademicos> _RolesAcademicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNumPersonalChanging(string value);
    partial void OnNumPersonalChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    #endregion
		
		public Academicos()
		{
			this._ExperienciasEducativas = new EntitySet<ExperienciasEducativas>(new Action<ExperienciasEducativas>(this.attach_ExperienciasEducativas), new Action<ExperienciasEducativas>(this.detach_ExperienciasEducativas));
			this._RolesAcademicos = new EntitySet<RolesAcademicos>(new Action<RolesAcademicos>(this.attach_RolesAcademicos), new Action<RolesAcademicos>(this.detach_RolesAcademicos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPersonal", DbType="NVarChar(25) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string NumPersonal
		{
			get
			{
				return this._NumPersonal;
			}
			set
			{
				if ((this._NumPersonal != value))
				{
					this.OnNumPersonalChanging(value);
					this.SendPropertyChanging();
					this._NumPersonal = value;
					this.SendPropertyChanged("NumPersonal");
					this.OnNumPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="NVarChar(50)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(50)")]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(50)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(80)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(15)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academicos_ExperienciasEducativas", Storage="_ExperienciasEducativas", ThisKey="NumPersonal", OtherKey="NumPersonal")]
		public EntitySet<ExperienciasEducativas> ExperienciasEducativas
		{
			get
			{
				return this._ExperienciasEducativas;
			}
			set
			{
				this._ExperienciasEducativas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academicos_RolesAcademicos", Storage="_RolesAcademicos", ThisKey="NumPersonal", OtherKey="NumPersonal")]
		public EntitySet<RolesAcademicos> RolesAcademicos
		{
			get
			{
				return this._RolesAcademicos;
			}
			set
			{
				this._RolesAcademicos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciasEducativas(ExperienciasEducativas entity)
		{
			this.SendPropertyChanging();
			entity.Academicos = this;
		}
		
		private void detach_ExperienciasEducativas(ExperienciasEducativas entity)
		{
			this.SendPropertyChanging();
			entity.Academicos = null;
		}
		
		private void attach_RolesAcademicos(RolesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Academicos = this;
		}
		
		private void detach_RolesAcademicos(RolesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Academicos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.AreasAcademicas")]
	public partial class AreasAcademicas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDAreaAcademica;
		
		private string _Nombre;
		
		private EntitySet<ProgramasEducativos> _ProgramasEducativos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDAreaAcademicaChanging(int value);
    partial void OnIDAreaAcademicaChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    #endregion
		
		public AreasAcademicas()
		{
			this._ProgramasEducativos = new EntitySet<ProgramasEducativos>(new Action<ProgramasEducativos>(this.attach_ProgramasEducativos), new Action<ProgramasEducativos>(this.detach_ProgramasEducativos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAreaAcademica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDAreaAcademica
		{
			get
			{
				return this._IDAreaAcademica;
			}
			set
			{
				if ((this._IDAreaAcademica != value))
				{
					this.OnIDAreaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDAreaAcademica = value;
					this.SendPropertyChanged("IDAreaAcademica");
					this.OnIDAreaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(40)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreasAcademicas_ProgramasEducativos", Storage="_ProgramasEducativos", ThisKey="IDAreaAcademica", OtherKey="IDAreaAcademica")]
		public EntitySet<ProgramasEducativos> ProgramasEducativos
		{
			get
			{
				return this._ProgramasEducativos;
			}
			set
			{
				this._ProgramasEducativos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProgramasEducativos(ProgramasEducativos entity)
		{
			this.SendPropertyChanging();
			entity.AreasAcademicas = this;
		}
		
		private void detach_ProgramasEducativos(ProgramasEducativos entity)
		{
			this.SendPropertyChanging();
			entity.AreasAcademicas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.CategoriasProblematica")]
	public partial class CategoriasProblematica : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDCategoria;
		
		private string _Tipo;
		
		private EntitySet<ProblematicasAcademicas> _ProblematicasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDCategoriaChanging(int value);
    partial void OnIDCategoriaChanged();
    partial void OnTipoChanging(string value);
    partial void OnTipoChanged();
    #endregion
		
		public CategoriasProblematica()
		{
			this._ProblematicasAcademicas = new EntitySet<ProblematicasAcademicas>(new Action<ProblematicasAcademicas>(this.attach_ProblematicasAcademicas), new Action<ProblematicasAcademicas>(this.detach_ProblematicasAcademicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Tipo", DbType="NVarChar(100)")]
		public string Tipo
		{
			get
			{
				return this._Tipo;
			}
			set
			{
				if ((this._Tipo != value))
				{
					this.OnTipoChanging(value);
					this.SendPropertyChanging();
					this._Tipo = value;
					this.SendPropertyChanged("Tipo");
					this.OnTipoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriasProblematica_ProblematicasAcademicas", Storage="_ProblematicasAcademicas", ThisKey="IDCategoria", OtherKey="IDCategoria")]
		public EntitySet<ProblematicasAcademicas> ProblematicasAcademicas
		{
			get
			{
				return this._ProblematicasAcademicas;
			}
			set
			{
				this._ProblematicasAcademicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.CategoriasProblematica = this;
		}
		
		private void detach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.CategoriasProblematica = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Estudiantes")]
	public partial class Estudiantes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private string _Matricula;
		
		private string _Nombres;
		
		private string _ApellidoPaterno;
		
		private string _ApellidoMaterno;
		
		private string _Correo;
		
		private string _Telefono;
		
		private System.Nullable<int> _IDProgramaEducativo;
		
		private EntitySet<ExperienciasEducativasEstudiantes> _ExperienciasEducativasEstudiantes;
		
		private EntitySet<TutoriasAcademicasEstudiantes> _TutoriasAcademicasEstudiantes;
		
		private EntityRef<ProgramasEducativos> _ProgramasEducativos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnMatriculaChanging(string value);
    partial void OnMatriculaChanged();
    partial void OnNombresChanging(string value);
    partial void OnNombresChanged();
    partial void OnApellidoPaternoChanging(string value);
    partial void OnApellidoPaternoChanged();
    partial void OnApellidoMaternoChanging(string value);
    partial void OnApellidoMaternoChanged();
    partial void OnCorreoChanging(string value);
    partial void OnCorreoChanged();
    partial void OnTelefonoChanging(string value);
    partial void OnTelefonoChanged();
    partial void OnIDProgramaEducativoChanging(System.Nullable<int> value);
    partial void OnIDProgramaEducativoChanged();
    #endregion
		
		public Estudiantes()
		{
			this._ExperienciasEducativasEstudiantes = new EntitySet<ExperienciasEducativasEstudiantes>(new Action<ExperienciasEducativasEstudiantes>(this.attach_ExperienciasEducativasEstudiantes), new Action<ExperienciasEducativasEstudiantes>(this.detach_ExperienciasEducativasEstudiantes));
			this._TutoriasAcademicasEstudiantes = new EntitySet<TutoriasAcademicasEstudiantes>(new Action<TutoriasAcademicasEstudiantes>(this.attach_TutoriasAcademicasEstudiantes), new Action<TutoriasAcademicasEstudiantes>(this.detach_TutoriasAcademicasEstudiantes));
			this._ProgramasEducativos = default(EntityRef<ProgramasEducativos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="NVarChar(10) NOT NULL", CanBeNull=false, IsPrimaryKey=true)]
		public string Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombres", DbType="NVarChar(50)")]
		public string Nombres
		{
			get
			{
				return this._Nombres;
			}
			set
			{
				if ((this._Nombres != value))
				{
					this.OnNombresChanging(value);
					this.SendPropertyChanging();
					this._Nombres = value;
					this.SendPropertyChanged("Nombres");
					this.OnNombresChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoPaterno", DbType="NVarChar(50)")]
		public string ApellidoPaterno
		{
			get
			{
				return this._ApellidoPaterno;
			}
			set
			{
				if ((this._ApellidoPaterno != value))
				{
					this.OnApellidoPaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoPaterno = value;
					this.SendPropertyChanged("ApellidoPaterno");
					this.OnApellidoPaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ApellidoMaterno", DbType="NVarChar(50)")]
		public string ApellidoMaterno
		{
			get
			{
				return this._ApellidoMaterno;
			}
			set
			{
				if ((this._ApellidoMaterno != value))
				{
					this.OnApellidoMaternoChanging(value);
					this.SendPropertyChanging();
					this._ApellidoMaterno = value;
					this.SendPropertyChanged("ApellidoMaterno");
					this.OnApellidoMaternoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Correo", DbType="NVarChar(80)")]
		public string Correo
		{
			get
			{
				return this._Correo;
			}
			set
			{
				if ((this._Correo != value))
				{
					this.OnCorreoChanging(value);
					this.SendPropertyChanging();
					this._Correo = value;
					this.SendPropertyChanged("Correo");
					this.OnCorreoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Telefono", DbType="NVarChar(15)")]
		public string Telefono
		{
			get
			{
				return this._Telefono;
			}
			set
			{
				if ((this._Telefono != value))
				{
					this.OnTelefonoChanging(value);
					this.SendPropertyChanging();
					this._Telefono = value;
					this.SendPropertyChanged("Telefono");
					this.OnTelefonoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProgramaEducativo", DbType="Int")]
		public System.Nullable<int> IDProgramaEducativo
		{
			get
			{
				return this._IDProgramaEducativo;
			}
			set
			{
				if ((this._IDProgramaEducativo != value))
				{
					if (this._ProgramasEducativos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IDProgramaEducativo = value;
					this.SendPropertyChanged("IDProgramaEducativo");
					this.OnIDProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiantes_ExperienciasEducativasEstudiantes", Storage="_ExperienciasEducativasEstudiantes", ThisKey="Matricula", OtherKey="Matricula")]
		public EntitySet<ExperienciasEducativasEstudiantes> ExperienciasEducativasEstudiantes
		{
			get
			{
				return this._ExperienciasEducativasEstudiantes;
			}
			set
			{
				this._ExperienciasEducativasEstudiantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiantes_TutoriasAcademicasEstudiantes", Storage="_TutoriasAcademicasEstudiantes", ThisKey="Matricula", OtherKey="Matricula")]
		public EntitySet<TutoriasAcademicasEstudiantes> TutoriasAcademicasEstudiantes
		{
			get
			{
				return this._TutoriasAcademicasEstudiantes;
			}
			set
			{
				this._TutoriasAcademicasEstudiantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramasEducativos_Estudiantes", Storage="_ProgramasEducativos", ThisKey="IDProgramaEducativo", OtherKey="IDProgramaEducativo", IsForeignKey=true)]
		public ProgramasEducativos ProgramasEducativos
		{
			get
			{
				return this._ProgramasEducativos.Entity;
			}
			set
			{
				ProgramasEducativos previousValue = this._ProgramasEducativos.Entity;
				if (((previousValue != value) 
							|| (this._ProgramasEducativos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ProgramasEducativos.Entity = null;
						previousValue.Estudiantes.Remove(this);
					}
					this._ProgramasEducativos.Entity = value;
					if ((value != null))
					{
						value.Estudiantes.Add(this);
						this._IDProgramaEducativo = value.IDProgramaEducativo;
					}
					else
					{
						this._IDProgramaEducativo = default(Nullable<int>);
					}
					this.SendPropertyChanged("ProgramasEducativos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.Estudiantes = this;
		}
		
		private void detach_ExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.Estudiantes = null;
		}
		
		private void attach_TutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.Estudiantes = this;
		}
		
		private void detach_TutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.Estudiantes = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienciasEducativas")]
	public partial class ExperienciasEducativas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _NRC;
		
		private string _Nombre;
		
		private System.Nullable<int> _Creditos;
		
		private string _NumPersonal;
		
		private EntitySet<ExperienciasEducativasEstudiantes> _ExperienciasEducativasEstudiantes;
		
		private EntitySet<ProblematicasAcademicas> _ProblematicasAcademicas;
		
		private EntityRef<Academicos> _Academicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnNRCChanging(int value);
    partial void OnNRCChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnCreditosChanging(System.Nullable<int> value);
    partial void OnCreditosChanged();
    partial void OnNumPersonalChanging(string value);
    partial void OnNumPersonalChanged();
    #endregion
		
		public ExperienciasEducativas()
		{
			this._ExperienciasEducativasEstudiantes = new EntitySet<ExperienciasEducativasEstudiantes>(new Action<ExperienciasEducativasEstudiantes>(this.attach_ExperienciasEducativasEstudiantes), new Action<ExperienciasEducativasEstudiantes>(this.detach_ExperienciasEducativasEstudiantes));
			this._ProblematicasAcademicas = new EntitySet<ProblematicasAcademicas>(new Action<ProblematicasAcademicas>(this.attach_ProblematicasAcademicas), new Action<ProblematicasAcademicas>(this.detach_ProblematicasAcademicas));
			this._Academicos = default(EntityRef<Academicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRC", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int NRC
		{
			get
			{
				return this._NRC;
			}
			set
			{
				if ((this._NRC != value))
				{
					this.OnNRCChanging(value);
					this.SendPropertyChanging();
					this._NRC = value;
					this.SendPropertyChanged("NRC");
					this.OnNRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(100)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Creditos", DbType="Int")]
		public System.Nullable<int> Creditos
		{
			get
			{
				return this._Creditos;
			}
			set
			{
				if ((this._Creditos != value))
				{
					this.OnCreditosChanging(value);
					this.SendPropertyChanging();
					this._Creditos = value;
					this.SendPropertyChanged("Creditos");
					this.OnCreditosChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPersonal", DbType="NVarChar(25)")]
		public string NumPersonal
		{
			get
			{
				return this._NumPersonal;
			}
			set
			{
				if ((this._NumPersonal != value))
				{
					if (this._Academicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumPersonalChanging(value);
					this.SendPropertyChanging();
					this._NumPersonal = value;
					this.SendPropertyChanged("NumPersonal");
					this.OnNumPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciasEducativas_ExperienciasEducativasEstudiantes", Storage="_ExperienciasEducativasEstudiantes", ThisKey="NRC", OtherKey="NRC")]
		public EntitySet<ExperienciasEducativasEstudiantes> ExperienciasEducativasEstudiantes
		{
			get
			{
				return this._ExperienciasEducativasEstudiantes;
			}
			set
			{
				this._ExperienciasEducativasEstudiantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciasEducativas_ProblematicasAcademicas", Storage="_ProblematicasAcademicas", ThisKey="NRC", OtherKey="NRC")]
		public EntitySet<ProblematicasAcademicas> ProblematicasAcademicas
		{
			get
			{
				return this._ProblematicasAcademicas;
			}
			set
			{
				this._ProblematicasAcademicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academicos_ExperienciasEducativas", Storage="_Academicos", ThisKey="NumPersonal", OtherKey="NumPersonal", IsForeignKey=true)]
		public Academicos Academicos
		{
			get
			{
				return this._Academicos.Entity;
			}
			set
			{
				Academicos previousValue = this._Academicos.Entity;
				if (((previousValue != value) 
							|| (this._Academicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academicos.Entity = null;
						previousValue.ExperienciasEducativas.Remove(this);
					}
					this._Academicos.Entity = value;
					if ((value != null))
					{
						value.ExperienciasEducativas.Add(this);
						this._NumPersonal = value.NumPersonal;
					}
					else
					{
						this._NumPersonal = default(string);
					}
					this.SendPropertyChanged("Academicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciasEducativas = this;
		}
		
		private void detach_ExperienciasEducativasEstudiantes(ExperienciasEducativasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciasEducativas = null;
		}
		
		private void attach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciasEducativas = this;
		}
		
		private void detach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.ExperienciasEducativas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ExperienciasEducativasEstudiantes")]
	public partial class ExperienciasEducativasEstudiantes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDExperienciaEducativaEstudiante;
		
		private System.Nullable<int> _NRC;
		
		private string _Matricula;
		
		private EntityRef<Estudiantes> _Estudiantes;
		
		private EntityRef<ExperienciasEducativas> _ExperienciasEducativas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDExperienciaEducativaEstudianteChanging(int value);
    partial void OnIDExperienciaEducativaEstudianteChanged();
    partial void OnNRCChanging(System.Nullable<int> value);
    partial void OnNRCChanged();
    partial void OnMatriculaChanging(string value);
    partial void OnMatriculaChanged();
    #endregion
		
		public ExperienciasEducativasEstudiantes()
		{
			this._Estudiantes = default(EntityRef<Estudiantes>);
			this._ExperienciasEducativas = default(EntityRef<ExperienciasEducativas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDExperienciaEducativaEstudiante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDExperienciaEducativaEstudiante
		{
			get
			{
				return this._IDExperienciaEducativaEstudiante;
			}
			set
			{
				if ((this._IDExperienciaEducativaEstudiante != value))
				{
					this.OnIDExperienciaEducativaEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IDExperienciaEducativaEstudiante = value;
					this.SendPropertyChanged("IDExperienciaEducativaEstudiante");
					this.OnIDExperienciaEducativaEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRC", DbType="Int")]
		public System.Nullable<int> NRC
		{
			get
			{
				return this._NRC;
			}
			set
			{
				if ((this._NRC != value))
				{
					if (this._ExperienciasEducativas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNRCChanging(value);
					this.SendPropertyChanging();
					this._NRC = value;
					this.SendPropertyChanged("NRC");
					this.OnNRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="NVarChar(10)")]
		public string Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					if (this._Estudiantes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiantes_ExperienciasEducativasEstudiantes", Storage="_Estudiantes", ThisKey="Matricula", OtherKey="Matricula", IsForeignKey=true)]
		public Estudiantes Estudiantes
		{
			get
			{
				return this._Estudiantes.Entity;
			}
			set
			{
				Estudiantes previousValue = this._Estudiantes.Entity;
				if (((previousValue != value) 
							|| (this._Estudiantes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudiantes.Entity = null;
						previousValue.ExperienciasEducativasEstudiantes.Remove(this);
					}
					this._Estudiantes.Entity = value;
					if ((value != null))
					{
						value.ExperienciasEducativasEstudiantes.Add(this);
						this._Matricula = value.Matricula;
					}
					else
					{
						this._Matricula = default(string);
					}
					this.SendPropertyChanged("Estudiantes");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciasEducativas_ExperienciasEducativasEstudiantes", Storage="_ExperienciasEducativas", ThisKey="NRC", OtherKey="NRC", IsForeignKey=true)]
		public ExperienciasEducativas ExperienciasEducativas
		{
			get
			{
				return this._ExperienciasEducativas.Entity;
			}
			set
			{
				ExperienciasEducativas previousValue = this._ExperienciasEducativas.Entity;
				if (((previousValue != value) 
							|| (this._ExperienciasEducativas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienciasEducativas.Entity = null;
						previousValue.ExperienciasEducativasEstudiantes.Remove(this);
					}
					this._ExperienciasEducativas.Entity = value;
					if ((value != null))
					{
						value.ExperienciasEducativasEstudiantes.Add(this);
						this._NRC = value.NRC;
					}
					else
					{
						this._NRC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExperienciasEducativas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.PeriodosEscolares")]
	public partial class PeriodosEscolares : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDPeriodoEscolar;
		
		private System.Nullable<System.DateTime> _FechaInicio;
		
		private System.Nullable<System.DateTime> _FechaFin;
		
		private EntitySet<TutoriasAcademicas> _TutoriasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDPeriodoEscolarChanging(int value);
    partial void OnIDPeriodoEscolarChanged();
    partial void OnFechaInicioChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaInicioChanged();
    partial void OnFechaFinChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaFinChanged();
    #endregion
		
		public PeriodosEscolares()
		{
			this._TutoriasAcademicas = new EntitySet<TutoriasAcademicas>(new Action<TutoriasAcademicas>(this.attach_TutoriasAcademicas), new Action<TutoriasAcademicas>(this.detach_TutoriasAcademicas));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPeriodoEscolar", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDPeriodoEscolar
		{
			get
			{
				return this._IDPeriodoEscolar;
			}
			set
			{
				if ((this._IDPeriodoEscolar != value))
				{
					this.OnIDPeriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._IDPeriodoEscolar = value;
					this.SendPropertyChanged("IDPeriodoEscolar");
					this.OnIDPeriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaInicio", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaInicio
		{
			get
			{
				return this._FechaInicio;
			}
			set
			{
				if ((this._FechaInicio != value))
				{
					this.OnFechaInicioChanging(value);
					this.SendPropertyChanging();
					this._FechaInicio = value;
					this.SendPropertyChanged("FechaInicio");
					this.OnFechaInicioChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaFin", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaFin
		{
			get
			{
				return this._FechaFin;
			}
			set
			{
				if ((this._FechaFin != value))
				{
					this.OnFechaFinChanging(value);
					this.SendPropertyChanging();
					this._FechaFin = value;
					this.SendPropertyChanged("FechaFin");
					this.OnFechaFinChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodosEscolares_TutoriasAcademicas", Storage="_TutoriasAcademicas", ThisKey="IDPeriodoEscolar", OtherKey="IDPeriodoEscolar")]
		public EntitySet<TutoriasAcademicas> TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas;
			}
			set
			{
				this._TutoriasAcademicas.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.PeriodosEscolares = this;
		}
		
		private void detach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.PeriodosEscolares = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProblematicasAcademicas")]
	public partial class ProblematicasAcademicas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProblematicaAcademica;
		
		private string _Estado;
		
		private string _Descripcion;
		
		private System.Nullable<int> _IDCategoria;
		
		private System.Nullable<int> _IDTutoriaAcademicaEstudiante;
		
		private System.Nullable<int> _NRC;
		
		private string _Solucion;
		
		private EntityRef<CategoriasProblematica> _CategoriasProblematica;
		
		private EntityRef<ExperienciasEducativas> _ExperienciasEducativas;
		
		private EntityRef<TutoriasAcademicasEstudiantes> _TutoriasAcademicasEstudiantes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProblematicaAcademicaChanging(int value);
    partial void OnIDProblematicaAcademicaChanged();
    partial void OnEstadoChanging(string value);
    partial void OnEstadoChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnIDCategoriaChanging(System.Nullable<int> value);
    partial void OnIDCategoriaChanged();
    partial void OnIDTutoriaAcademicaEstudianteChanging(System.Nullable<int> value);
    partial void OnIDTutoriaAcademicaEstudianteChanged();
    partial void OnNRCChanging(System.Nullable<int> value);
    partial void OnNRCChanged();
    partial void OnSolucionChanging(string value);
    partial void OnSolucionChanged();
    #endregion
		
		public ProblematicasAcademicas()
		{
			this._CategoriasProblematica = default(EntityRef<CategoriasProblematica>);
			this._ExperienciasEducativas = default(EntityRef<ExperienciasEducativas>);
			this._TutoriasAcademicasEstudiantes = default(EntityRef<TutoriasAcademicasEstudiantes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProblematicaAcademica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDProblematicaAcademica
		{
			get
			{
				return this._IDProblematicaAcademica;
			}
			set
			{
				if ((this._IDProblematicaAcademica != value))
				{
					this.OnIDProblematicaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDProblematicaAcademica = value;
					this.SendPropertyChanged("IDProblematicaAcademica");
					this.OnIDProblematicaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Estado", DbType="NVarChar(15)")]
		public string Estado
		{
			get
			{
				return this._Estado;
			}
			set
			{
				if ((this._Estado != value))
				{
					this.OnEstadoChanging(value);
					this.SendPropertyChanging();
					this._Estado = value;
					this.SendPropertyChanged("Estado");
					this.OnEstadoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDCategoria", DbType="Int")]
		public System.Nullable<int> IDCategoria
		{
			get
			{
				return this._IDCategoria;
			}
			set
			{
				if ((this._IDCategoria != value))
				{
					if (this._CategoriasProblematica.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDCategoriaChanging(value);
					this.SendPropertyChanging();
					this._IDCategoria = value;
					this.SendPropertyChanged("IDCategoria");
					this.OnIDCategoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTutoriaAcademicaEstudiante", DbType="Int")]
		public System.Nullable<int> IDTutoriaAcademicaEstudiante
		{
			get
			{
				return this._IDTutoriaAcademicaEstudiante;
			}
			set
			{
				if ((this._IDTutoriaAcademicaEstudiante != value))
				{
					if (this._TutoriasAcademicasEstudiantes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTutoriaAcademicaEstudianteChanging(value);
					this.SendPropertyChanging();
					this._IDTutoriaAcademicaEstudiante = value;
					this.SendPropertyChanged("IDTutoriaAcademicaEstudiante");
					this.OnIDTutoriaAcademicaEstudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NRC", DbType="Int")]
		public System.Nullable<int> NRC
		{
			get
			{
				return this._NRC;
			}
			set
			{
				if ((this._NRC != value))
				{
					if (this._ExperienciasEducativas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNRCChanging(value);
					this.SendPropertyChanging();
					this._NRC = value;
					this.SendPropertyChanged("NRC");
					this.OnNRCChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Solucion", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Solucion
		{
			get
			{
				return this._Solucion;
			}
			set
			{
				if ((this._Solucion != value))
				{
					this.OnSolucionChanging(value);
					this.SendPropertyChanging();
					this._Solucion = value;
					this.SendPropertyChanged("Solucion");
					this.OnSolucionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="CategoriasProblematica_ProblematicasAcademicas", Storage="_CategoriasProblematica", ThisKey="IDCategoria", OtherKey="IDCategoria", IsForeignKey=true)]
		public CategoriasProblematica CategoriasProblematica
		{
			get
			{
				return this._CategoriasProblematica.Entity;
			}
			set
			{
				CategoriasProblematica previousValue = this._CategoriasProblematica.Entity;
				if (((previousValue != value) 
							|| (this._CategoriasProblematica.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._CategoriasProblematica.Entity = null;
						previousValue.ProblematicasAcademicas.Remove(this);
					}
					this._CategoriasProblematica.Entity = value;
					if ((value != null))
					{
						value.ProblematicasAcademicas.Add(this);
						this._IDCategoria = value.IDCategoria;
					}
					else
					{
						this._IDCategoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("CategoriasProblematica");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ExperienciasEducativas_ProblematicasAcademicas", Storage="_ExperienciasEducativas", ThisKey="NRC", OtherKey="NRC", IsForeignKey=true)]
		public ExperienciasEducativas ExperienciasEducativas
		{
			get
			{
				return this._ExperienciasEducativas.Entity;
			}
			set
			{
				ExperienciasEducativas previousValue = this._ExperienciasEducativas.Entity;
				if (((previousValue != value) 
							|| (this._ExperienciasEducativas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ExperienciasEducativas.Entity = null;
						previousValue.ProblematicasAcademicas.Remove(this);
					}
					this._ExperienciasEducativas.Entity = value;
					if ((value != null))
					{
						value.ProblematicasAcademicas.Add(this);
						this._NRC = value.NRC;
					}
					else
					{
						this._NRC = default(Nullable<int>);
					}
					this.SendPropertyChanged("ExperienciasEducativas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicasEstudiantes_ProblematicasAcademicas", Storage="_TutoriasAcademicasEstudiantes", ThisKey="IDTutoriaAcademicaEstudiante", OtherKey="IDTutoriaAcademicaestudiante", IsForeignKey=true)]
		public TutoriasAcademicasEstudiantes TutoriasAcademicasEstudiantes
		{
			get
			{
				return this._TutoriasAcademicasEstudiantes.Entity;
			}
			set
			{
				TutoriasAcademicasEstudiantes previousValue = this._TutoriasAcademicasEstudiantes.Entity;
				if (((previousValue != value) 
							|| (this._TutoriasAcademicasEstudiantes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutoriasAcademicasEstudiantes.Entity = null;
						previousValue.ProblematicasAcademicas.Remove(this);
					}
					this._TutoriasAcademicasEstudiantes.Entity = value;
					if ((value != null))
					{
						value.ProblematicasAcademicas.Add(this);
						this._IDTutoriaAcademicaEstudiante = value.IDTutoriaAcademicaestudiante;
					}
					else
					{
						this._IDTutoriaAcademicaEstudiante = default(Nullable<int>);
					}
					this.SendPropertyChanged("TutoriasAcademicasEstudiantes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ProgramasEducativos")]
	public partial class ProgramasEducativos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDProgramaEducativo;
		
		private string _Nombre;
		
		private System.Nullable<int> _IDAreaAcademica;
		
		private EntitySet<Estudiantes> _Estudiantes;
		
		private EntityRef<AreasAcademicas> _AreasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDProgramaEducativoChanging(int value);
    partial void OnIDProgramaEducativoChanged();
    partial void OnNombreChanging(string value);
    partial void OnNombreChanged();
    partial void OnIDAreaAcademicaChanging(System.Nullable<int> value);
    partial void OnIDAreaAcademicaChanged();
    #endregion
		
		public ProgramasEducativos()
		{
			this._Estudiantes = new EntitySet<Estudiantes>(new Action<Estudiantes>(this.attach_Estudiantes), new Action<Estudiantes>(this.detach_Estudiantes));
			this._AreasAcademicas = default(EntityRef<AreasAcademicas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDProgramaEducativo", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDProgramaEducativo
		{
			get
			{
				return this._IDProgramaEducativo;
			}
			set
			{
				if ((this._IDProgramaEducativo != value))
				{
					this.OnIDProgramaEducativoChanging(value);
					this.SendPropertyChanging();
					this._IDProgramaEducativo = value;
					this.SendPropertyChanged("IDProgramaEducativo");
					this.OnIDProgramaEducativoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Nombre", DbType="NVarChar(150)")]
		public string Nombre
		{
			get
			{
				return this._Nombre;
			}
			set
			{
				if ((this._Nombre != value))
				{
					this.OnNombreChanging(value);
					this.SendPropertyChanging();
					this._Nombre = value;
					this.SendPropertyChanged("Nombre");
					this.OnNombreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDAreaAcademica", DbType="Int")]
		public System.Nullable<int> IDAreaAcademica
		{
			get
			{
				return this._IDAreaAcademica;
			}
			set
			{
				if ((this._IDAreaAcademica != value))
				{
					if (this._AreasAcademicas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDAreaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDAreaAcademica = value;
					this.SendPropertyChanged("IDAreaAcademica");
					this.OnIDAreaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ProgramasEducativos_Estudiantes", Storage="_Estudiantes", ThisKey="IDProgramaEducativo", OtherKey="IDProgramaEducativo")]
		public EntitySet<Estudiantes> Estudiantes
		{
			get
			{
				return this._Estudiantes;
			}
			set
			{
				this._Estudiantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="AreasAcademicas_ProgramasEducativos", Storage="_AreasAcademicas", ThisKey="IDAreaAcademica", OtherKey="IDAreaAcademica", IsForeignKey=true)]
		public AreasAcademicas AreasAcademicas
		{
			get
			{
				return this._AreasAcademicas.Entity;
			}
			set
			{
				AreasAcademicas previousValue = this._AreasAcademicas.Entity;
				if (((previousValue != value) 
							|| (this._AreasAcademicas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._AreasAcademicas.Entity = null;
						previousValue.ProgramasEducativos.Remove(this);
					}
					this._AreasAcademicas.Entity = value;
					if ((value != null))
					{
						value.ProgramasEducativos.Add(this);
						this._IDAreaAcademica = value.IDAreaAcademica;
					}
					else
					{
						this._IDAreaAcademica = default(Nullable<int>);
					}
					this.SendPropertyChanged("AreasAcademicas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_Estudiantes(Estudiantes entity)
		{
			this.SendPropertyChanging();
			entity.ProgramasEducativos = this;
		}
		
		private void detach_Estudiantes(Estudiantes entity)
		{
			this.SendPropertyChanging();
			entity.ProgramasEducativos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportesGenerales")]
	public partial class ReportesGenerales : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDReporteGeneral;
		
		private string _Descripcion;
		
		private string _ComentarioGeneral;
		
		private System.Nullable<int> _IDRolAcademico;
		
		private EntityRef<RolesAcademicos> _RolesAcademicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDReporteGeneralChanging(int value);
    partial void OnIDReporteGeneralChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnComentarioGeneralChanging(string value);
    partial void OnComentarioGeneralChanged();
    partial void OnIDRolAcademicoChanging(System.Nullable<int> value);
    partial void OnIDRolAcademicoChanged();
    #endregion
		
		public ReportesGenerales()
		{
			this._RolesAcademicos = default(EntityRef<RolesAcademicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReporteGeneral", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDReporteGeneral
		{
			get
			{
				return this._IDReporteGeneral;
			}
			set
			{
				if ((this._IDReporteGeneral != value))
				{
					this.OnIDReporteGeneralChanging(value);
					this.SendPropertyChanging();
					this._IDReporteGeneral = value;
					this.SendPropertyChanged("IDReporteGeneral");
					this.OnIDReporteGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComentarioGeneral", DbType="NVarChar(500)")]
		public string ComentarioGeneral
		{
			get
			{
				return this._ComentarioGeneral;
			}
			set
			{
				if ((this._ComentarioGeneral != value))
				{
					this.OnComentarioGeneralChanging(value);
					this.SendPropertyChanging();
					this._ComentarioGeneral = value;
					this.SendPropertyChanged("ComentarioGeneral");
					this.OnComentarioGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRolAcademico", DbType="Int")]
		public System.Nullable<int> IDRolAcademico
		{
			get
			{
				return this._IDRolAcademico;
			}
			set
			{
				if ((this._IDRolAcademico != value))
				{
					if (this._RolesAcademicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRolAcademicoChanging(value);
					this.SendPropertyChanging();
					this._IDRolAcademico = value;
					this.SendPropertyChanged("IDRolAcademico");
					this.OnIDRolAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolesAcademicos_ReportesGenerales", Storage="_RolesAcademicos", ThisKey="IDRolAcademico", OtherKey="IDRolAcademico", IsForeignKey=true)]
		public RolesAcademicos RolesAcademicos
		{
			get
			{
				return this._RolesAcademicos.Entity;
			}
			set
			{
				RolesAcademicos previousValue = this._RolesAcademicos.Entity;
				if (((previousValue != value) 
							|| (this._RolesAcademicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RolesAcademicos.Entity = null;
						previousValue.ReportesGenerales.Remove(this);
					}
					this._RolesAcademicos.Entity = value;
					if ((value != null))
					{
						value.ReportesGenerales.Add(this);
						this._IDRolAcademico = value.IDRolAcademico;
					}
					else
					{
						this._IDRolAcademico = default(Nullable<int>);
					}
					this.SendPropertyChanged("RolesAcademicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ReportesTutoria")]
	public partial class ReportesTutoria : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDReporteTutoria;
		
		private string _Descripcion;
		
		private string _ComentarioGeneral;
		
		private System.Nullable<int> _IDTutoriaAcademica;
		
		private EntitySet<TutoriasAcademicas> _TutoriasAcademicas1;
		
		private EntityRef<TutoriasAcademicas> _TutoriasAcademicas;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDReporteTutoriaChanging(int value);
    partial void OnIDReporteTutoriaChanged();
    partial void OnDescripcionChanging(string value);
    partial void OnDescripcionChanged();
    partial void OnComentarioGeneralChanging(string value);
    partial void OnComentarioGeneralChanged();
    partial void OnIDTutoriaAcademicaChanging(System.Nullable<int> value);
    partial void OnIDTutoriaAcademicaChanged();
    #endregion
		
		public ReportesTutoria()
		{
			this._TutoriasAcademicas1 = new EntitySet<TutoriasAcademicas>(new Action<TutoriasAcademicas>(this.attach_TutoriasAcademicas1), new Action<TutoriasAcademicas>(this.detach_TutoriasAcademicas1));
			this._TutoriasAcademicas = default(EntityRef<TutoriasAcademicas>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReporteTutoria", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDReporteTutoria
		{
			get
			{
				return this._IDReporteTutoria;
			}
			set
			{
				if ((this._IDReporteTutoria != value))
				{
					this.OnIDReporteTutoriaChanging(value);
					this.SendPropertyChanging();
					this._IDReporteTutoria = value;
					this.SendPropertyChanged("IDReporteTutoria");
					this.OnIDReporteTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Descripcion", DbType="NText", UpdateCheck=UpdateCheck.Never)]
		public string Descripcion
		{
			get
			{
				return this._Descripcion;
			}
			set
			{
				if ((this._Descripcion != value))
				{
					this.OnDescripcionChanging(value);
					this.SendPropertyChanging();
					this._Descripcion = value;
					this.SendPropertyChanged("Descripcion");
					this.OnDescripcionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ComentarioGeneral", DbType="NVarChar(500)")]
		public string ComentarioGeneral
		{
			get
			{
				return this._ComentarioGeneral;
			}
			set
			{
				if ((this._ComentarioGeneral != value))
				{
					this.OnComentarioGeneralChanging(value);
					this.SendPropertyChanging();
					this._ComentarioGeneral = value;
					this.SendPropertyChanged("ComentarioGeneral");
					this.OnComentarioGeneralChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTutoriaAcademica", DbType="Int")]
		public System.Nullable<int> IDTutoriaAcademica
		{
			get
			{
				return this._IDTutoriaAcademica;
			}
			set
			{
				if ((this._IDTutoriaAcademica != value))
				{
					if (this._TutoriasAcademicas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTutoriaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDTutoriaAcademica = value;
					this.SendPropertyChanged("IDTutoriaAcademica");
					this.OnIDTutoriaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportesTutoria_TutoriasAcademicas", Storage="_TutoriasAcademicas1", ThisKey="IDReporteTutoria", OtherKey="IDReporteTutoria")]
		public EntitySet<TutoriasAcademicas> TutoriasAcademicas1
		{
			get
			{
				return this._TutoriasAcademicas1;
			}
			set
			{
				this._TutoriasAcademicas1.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_ReportesTutoria", Storage="_TutoriasAcademicas", ThisKey="IDTutoriaAcademica", OtherKey="IDTutoriaAcademica", IsForeignKey=true)]
		public TutoriasAcademicas TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas.Entity;
			}
			set
			{
				TutoriasAcademicas previousValue = this._TutoriasAcademicas.Entity;
				if (((previousValue != value) 
							|| (this._TutoriasAcademicas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutoriasAcademicas.Entity = null;
						previousValue.ReportesTutoria.Remove(this);
					}
					this._TutoriasAcademicas.Entity = value;
					if ((value != null))
					{
						value.ReportesTutoria.Add(this);
						this._IDTutoriaAcademica = value.IDTutoriaAcademica;
					}
					else
					{
						this._IDTutoriaAcademica = default(Nullable<int>);
					}
					this.SendPropertyChanged("TutoriasAcademicas");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TutoriasAcademicas1(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.ReportesTutoria1 = this;
		}
		
		private void detach_TutoriasAcademicas1(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.ReportesTutoria1 = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Roles")]
	public partial class Roles : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRol;
		
		private string _NombreRol;
		
		private EntitySet<RolesAcademicos> _RolesAcademicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRolChanging(int value);
    partial void OnIDRolChanged();
    partial void OnNombreRolChanging(string value);
    partial void OnNombreRolChanged();
    #endregion
		
		public Roles()
		{
			this._RolesAcademicos = new EntitySet<RolesAcademicos>(new Action<RolesAcademicos>(this.attach_RolesAcademicos), new Action<RolesAcademicos>(this.detach_RolesAcademicos));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRol", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRol
		{
			get
			{
				return this._IDRol;
			}
			set
			{
				if ((this._IDRol != value))
				{
					this.OnIDRolChanging(value);
					this.SendPropertyChanging();
					this._IDRol = value;
					this.SendPropertyChanged("IDRol");
					this.OnIDRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NombreRol", DbType="NVarChar(50)")]
		public string NombreRol
		{
			get
			{
				return this._NombreRol;
			}
			set
			{
				if ((this._NombreRol != value))
				{
					this.OnNombreRolChanging(value);
					this.SendPropertyChanging();
					this._NombreRol = value;
					this.SendPropertyChanged("NombreRol");
					this.OnNombreRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_RolesAcademicos", Storage="_RolesAcademicos", ThisKey="IDRol", OtherKey="IDRol")]
		public EntitySet<RolesAcademicos> RolesAcademicos
		{
			get
			{
				return this._RolesAcademicos;
			}
			set
			{
				this._RolesAcademicos.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_RolesAcademicos(RolesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Roles = this;
		}
		
		private void detach_RolesAcademicos(RolesAcademicos entity)
		{
			this.SendPropertyChanging();
			entity.Roles = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RolesAcademicos")]
	public partial class RolesAcademicos : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDRolAcademico;
		
		private string _Password;
		
		private System.Nullable<int> _IDRol;
		
		private string _NumPersonal;
		
		private EntitySet<ReportesGenerales> _ReportesGenerales;
		
		private EntitySet<TutoriasAcademicas> _TutoriasAcademicas;
		
		private EntityRef<Roles> _Roles;
		
		private EntityRef<Academicos> _Academicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDRolAcademicoChanging(int value);
    partial void OnIDRolAcademicoChanged();
    partial void OnPasswordChanging(string value);
    partial void OnPasswordChanged();
    partial void OnIDRolChanging(System.Nullable<int> value);
    partial void OnIDRolChanged();
    partial void OnNumPersonalChanging(string value);
    partial void OnNumPersonalChanged();
    #endregion
		
		public RolesAcademicos()
		{
			this._ReportesGenerales = new EntitySet<ReportesGenerales>(new Action<ReportesGenerales>(this.attach_ReportesGenerales), new Action<ReportesGenerales>(this.detach_ReportesGenerales));
			this._TutoriasAcademicas = new EntitySet<TutoriasAcademicas>(new Action<TutoriasAcademicas>(this.attach_TutoriasAcademicas), new Action<TutoriasAcademicas>(this.detach_TutoriasAcademicas));
			this._Roles = default(EntityRef<Roles>);
			this._Academicos = default(EntityRef<Academicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRolAcademico", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDRolAcademico
		{
			get
			{
				return this._IDRolAcademico;
			}
			set
			{
				if ((this._IDRolAcademico != value))
				{
					this.OnIDRolAcademicoChanging(value);
					this.SendPropertyChanging();
					this._IDRolAcademico = value;
					this.SendPropertyChanged("IDRolAcademico");
					this.OnIDRolAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Password", DbType="NVarChar(20)")]
		public string Password
		{
			get
			{
				return this._Password;
			}
			set
			{
				if ((this._Password != value))
				{
					this.OnPasswordChanging(value);
					this.SendPropertyChanging();
					this._Password = value;
					this.SendPropertyChanged("Password");
					this.OnPasswordChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRol", DbType="Int")]
		public System.Nullable<int> IDRol
		{
			get
			{
				return this._IDRol;
			}
			set
			{
				if ((this._IDRol != value))
				{
					if (this._Roles.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRolChanging(value);
					this.SendPropertyChanging();
					this._IDRol = value;
					this.SendPropertyChanged("IDRol");
					this.OnIDRolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumPersonal", DbType="NVarChar(25)")]
		public string NumPersonal
		{
			get
			{
				return this._NumPersonal;
			}
			set
			{
				if ((this._NumPersonal != value))
				{
					if (this._Academicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnNumPersonalChanging(value);
					this.SendPropertyChanging();
					this._NumPersonal = value;
					this.SendPropertyChanged("NumPersonal");
					this.OnNumPersonalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolesAcademicos_ReportesGenerales", Storage="_ReportesGenerales", ThisKey="IDRolAcademico", OtherKey="IDRolAcademico")]
		public EntitySet<ReportesGenerales> ReportesGenerales
		{
			get
			{
				return this._ReportesGenerales;
			}
			set
			{
				this._ReportesGenerales.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolesAcademicos_TutoriasAcademicas", Storage="_TutoriasAcademicas", ThisKey="IDRolAcademico", OtherKey="IDRolAcademico")]
		public EntitySet<TutoriasAcademicas> TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas;
			}
			set
			{
				this._TutoriasAcademicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Roles_RolesAcademicos", Storage="_Roles", ThisKey="IDRol", OtherKey="IDRol", IsForeignKey=true)]
		public Roles Roles
		{
			get
			{
				return this._Roles.Entity;
			}
			set
			{
				Roles previousValue = this._Roles.Entity;
				if (((previousValue != value) 
							|| (this._Roles.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Roles.Entity = null;
						previousValue.RolesAcademicos.Remove(this);
					}
					this._Roles.Entity = value;
					if ((value != null))
					{
						value.RolesAcademicos.Add(this);
						this._IDRol = value.IDRol;
					}
					else
					{
						this._IDRol = default(Nullable<int>);
					}
					this.SendPropertyChanged("Roles");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Academicos_RolesAcademicos", Storage="_Academicos", ThisKey="NumPersonal", OtherKey="NumPersonal", IsForeignKey=true)]
		public Academicos Academicos
		{
			get
			{
				return this._Academicos.Entity;
			}
			set
			{
				Academicos previousValue = this._Academicos.Entity;
				if (((previousValue != value) 
							|| (this._Academicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Academicos.Entity = null;
						previousValue.RolesAcademicos.Remove(this);
					}
					this._Academicos.Entity = value;
					if ((value != null))
					{
						value.RolesAcademicos.Add(this);
						this._NumPersonal = value.NumPersonal;
					}
					else
					{
						this._NumPersonal = default(string);
					}
					this.SendPropertyChanged("Academicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportesGenerales(ReportesGenerales entity)
		{
			this.SendPropertyChanging();
			entity.RolesAcademicos = this;
		}
		
		private void detach_ReportesGenerales(ReportesGenerales entity)
		{
			this.SendPropertyChanging();
			entity.RolesAcademicos = null;
		}
		
		private void attach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.RolesAcademicos = this;
		}
		
		private void detach_TutoriasAcademicas(TutoriasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.RolesAcademicos = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TutoriasAcademicas")]
	public partial class TutoriasAcademicas : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTutoriaAcademica;
		
		private System.Nullable<System.TimeSpan> _Duracion;
		
		private System.Nullable<System.DateTime> _Fecha;
		
		private System.Nullable<int> _NumSesion;
		
		private System.Nullable<int> _IDRolAcademico;
		
		private System.Nullable<int> _IDReporteTutoria;
		
		private System.Nullable<int> _IDPeriodoEscolar;
		
		private System.Nullable<System.DateTime> _FechaCierre;
		
		private EntitySet<ReportesTutoria> _ReportesTutoria;
		
		private EntitySet<TutoriasAcademicasEstudiantes> _TutoriasAcademicasEstudiantes;
		
		private EntityRef<PeriodosEscolares> _PeriodosEscolares;
		
		private EntityRef<ReportesTutoria> _ReportesTutoria1;
		
		private EntityRef<RolesAcademicos> _RolesAcademicos;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTutoriaAcademicaChanging(int value);
    partial void OnIDTutoriaAcademicaChanged();
    partial void OnDuracionChanging(System.Nullable<System.TimeSpan> value);
    partial void OnDuracionChanged();
    partial void OnFechaChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaChanged();
    partial void OnNumSesionChanging(System.Nullable<int> value);
    partial void OnNumSesionChanged();
    partial void OnIDRolAcademicoChanging(System.Nullable<int> value);
    partial void OnIDRolAcademicoChanged();
    partial void OnIDReporteTutoriaChanging(System.Nullable<int> value);
    partial void OnIDReporteTutoriaChanged();
    partial void OnIDPeriodoEscolarChanging(System.Nullable<int> value);
    partial void OnIDPeriodoEscolarChanged();
    partial void OnFechaCierreChanging(System.Nullable<System.DateTime> value);
    partial void OnFechaCierreChanged();
    #endregion
		
		public TutoriasAcademicas()
		{
			this._ReportesTutoria = new EntitySet<ReportesTutoria>(new Action<ReportesTutoria>(this.attach_ReportesTutoria), new Action<ReportesTutoria>(this.detach_ReportesTutoria));
			this._TutoriasAcademicasEstudiantes = new EntitySet<TutoriasAcademicasEstudiantes>(new Action<TutoriasAcademicasEstudiantes>(this.attach_TutoriasAcademicasEstudiantes), new Action<TutoriasAcademicasEstudiantes>(this.detach_TutoriasAcademicasEstudiantes));
			this._PeriodosEscolares = default(EntityRef<PeriodosEscolares>);
			this._ReportesTutoria1 = default(EntityRef<ReportesTutoria>);
			this._RolesAcademicos = default(EntityRef<RolesAcademicos>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTutoriaAcademica", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTutoriaAcademica
		{
			get
			{
				return this._IDTutoriaAcademica;
			}
			set
			{
				if ((this._IDTutoriaAcademica != value))
				{
					this.OnIDTutoriaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDTutoriaAcademica = value;
					this.SendPropertyChanged("IDTutoriaAcademica");
					this.OnIDTutoriaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Duracion", DbType="Time")]
		public System.Nullable<System.TimeSpan> Duracion
		{
			get
			{
				return this._Duracion;
			}
			set
			{
				if ((this._Duracion != value))
				{
					this.OnDuracionChanging(value);
					this.SendPropertyChanging();
					this._Duracion = value;
					this.SendPropertyChanged("Duracion");
					this.OnDuracionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Fecha", DbType="DateTime")]
		public System.Nullable<System.DateTime> Fecha
		{
			get
			{
				return this._Fecha;
			}
			set
			{
				if ((this._Fecha != value))
				{
					this.OnFechaChanging(value);
					this.SendPropertyChanging();
					this._Fecha = value;
					this.SendPropertyChanged("Fecha");
					this.OnFechaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_NumSesion", DbType="Int")]
		public System.Nullable<int> NumSesion
		{
			get
			{
				return this._NumSesion;
			}
			set
			{
				if ((this._NumSesion != value))
				{
					this.OnNumSesionChanging(value);
					this.SendPropertyChanging();
					this._NumSesion = value;
					this.SendPropertyChanged("NumSesion");
					this.OnNumSesionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDRolAcademico", DbType="Int")]
		public System.Nullable<int> IDRolAcademico
		{
			get
			{
				return this._IDRolAcademico;
			}
			set
			{
				if ((this._IDRolAcademico != value))
				{
					if (this._RolesAcademicos.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDRolAcademicoChanging(value);
					this.SendPropertyChanging();
					this._IDRolAcademico = value;
					this.SendPropertyChanged("IDRolAcademico");
					this.OnIDRolAcademicoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDReporteTutoria", DbType="Int")]
		public System.Nullable<int> IDReporteTutoria
		{
			get
			{
				return this._IDReporteTutoria;
			}
			set
			{
				if ((this._IDReporteTutoria != value))
				{
					if (this._ReportesTutoria1.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDReporteTutoriaChanging(value);
					this.SendPropertyChanging();
					this._IDReporteTutoria = value;
					this.SendPropertyChanged("IDReporteTutoria");
					this.OnIDReporteTutoriaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDPeriodoEscolar", DbType="Int")]
		public System.Nullable<int> IDPeriodoEscolar
		{
			get
			{
				return this._IDPeriodoEscolar;
			}
			set
			{
				if ((this._IDPeriodoEscolar != value))
				{
					if (this._PeriodosEscolares.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDPeriodoEscolarChanging(value);
					this.SendPropertyChanging();
					this._IDPeriodoEscolar = value;
					this.SendPropertyChanged("IDPeriodoEscolar");
					this.OnIDPeriodoEscolarChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FechaCierre", DbType="DateTime")]
		public System.Nullable<System.DateTime> FechaCierre
		{
			get
			{
				return this._FechaCierre;
			}
			set
			{
				if ((this._FechaCierre != value))
				{
					this.OnFechaCierreChanging(value);
					this.SendPropertyChanging();
					this._FechaCierre = value;
					this.SendPropertyChanged("FechaCierre");
					this.OnFechaCierreChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_ReportesTutoria", Storage="_ReportesTutoria", ThisKey="IDTutoriaAcademica", OtherKey="IDTutoriaAcademica")]
		public EntitySet<ReportesTutoria> ReportesTutoria
		{
			get
			{
				return this._ReportesTutoria;
			}
			set
			{
				this._ReportesTutoria.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_TutoriasAcademicasEstudiantes", Storage="_TutoriasAcademicasEstudiantes", ThisKey="IDTutoriaAcademica", OtherKey="IDTutoriaAcademica")]
		public EntitySet<TutoriasAcademicasEstudiantes> TutoriasAcademicasEstudiantes
		{
			get
			{
				return this._TutoriasAcademicasEstudiantes;
			}
			set
			{
				this._TutoriasAcademicasEstudiantes.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="PeriodosEscolares_TutoriasAcademicas", Storage="_PeriodosEscolares", ThisKey="IDPeriodoEscolar", OtherKey="IDPeriodoEscolar", IsForeignKey=true)]
		public PeriodosEscolares PeriodosEscolares
		{
			get
			{
				return this._PeriodosEscolares.Entity;
			}
			set
			{
				PeriodosEscolares previousValue = this._PeriodosEscolares.Entity;
				if (((previousValue != value) 
							|| (this._PeriodosEscolares.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._PeriodosEscolares.Entity = null;
						previousValue.TutoriasAcademicas.Remove(this);
					}
					this._PeriodosEscolares.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicas.Add(this);
						this._IDPeriodoEscolar = value.IDPeriodoEscolar;
					}
					else
					{
						this._IDPeriodoEscolar = default(Nullable<int>);
					}
					this.SendPropertyChanged("PeriodosEscolares");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="ReportesTutoria_TutoriasAcademicas", Storage="_ReportesTutoria1", ThisKey="IDReporteTutoria", OtherKey="IDReporteTutoria", IsForeignKey=true)]
		public ReportesTutoria ReportesTutoria1
		{
			get
			{
				return this._ReportesTutoria1.Entity;
			}
			set
			{
				ReportesTutoria previousValue = this._ReportesTutoria1.Entity;
				if (((previousValue != value) 
							|| (this._ReportesTutoria1.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._ReportesTutoria1.Entity = null;
						previousValue.TutoriasAcademicas1.Remove(this);
					}
					this._ReportesTutoria1.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicas1.Add(this);
						this._IDReporteTutoria = value.IDReporteTutoria;
					}
					else
					{
						this._IDReporteTutoria = default(Nullable<int>);
					}
					this.SendPropertyChanged("ReportesTutoria1");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RolesAcademicos_TutoriasAcademicas", Storage="_RolesAcademicos", ThisKey="IDRolAcademico", OtherKey="IDRolAcademico", IsForeignKey=true)]
		public RolesAcademicos RolesAcademicos
		{
			get
			{
				return this._RolesAcademicos.Entity;
			}
			set
			{
				RolesAcademicos previousValue = this._RolesAcademicos.Entity;
				if (((previousValue != value) 
							|| (this._RolesAcademicos.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RolesAcademicos.Entity = null;
						previousValue.TutoriasAcademicas.Remove(this);
					}
					this._RolesAcademicos.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicas.Add(this);
						this._IDRolAcademico = value.IDRolAcademico;
					}
					else
					{
						this._IDRolAcademico = default(Nullable<int>);
					}
					this.SendPropertyChanged("RolesAcademicos");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ReportesTutoria(ReportesTutoria entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = this;
		}
		
		private void detach_ReportesTutoria(ReportesTutoria entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = null;
		}
		
		private void attach_TutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = this;
		}
		
		private void detach_TutoriasAcademicasEstudiantes(TutoriasAcademicasEstudiantes entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicas = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TutoriasAcademicasEstudiantes")]
	public partial class TutoriasAcademicasEstudiantes : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _IDTutoriaAcademicaestudiante;
		
		private System.Nullable<int> _IDTutoriaAcademica;
		
		private string _Matricula;
		
		private EntitySet<ProblematicasAcademicas> _ProblematicasAcademicas;
		
		private EntityRef<TutoriasAcademicas> _TutoriasAcademicas;
		
		private EntityRef<Estudiantes> _Estudiantes;
		
    #region Definiciones de métodos de extensibilidad
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnIDTutoriaAcademicaestudianteChanging(int value);
    partial void OnIDTutoriaAcademicaestudianteChanged();
    partial void OnIDTutoriaAcademicaChanging(System.Nullable<int> value);
    partial void OnIDTutoriaAcademicaChanged();
    partial void OnMatriculaChanging(string value);
    partial void OnMatriculaChanged();
    #endregion
		
		public TutoriasAcademicasEstudiantes()
		{
			this._ProblematicasAcademicas = new EntitySet<ProblematicasAcademicas>(new Action<ProblematicasAcademicas>(this.attach_ProblematicasAcademicas), new Action<ProblematicasAcademicas>(this.detach_ProblematicasAcademicas));
			this._TutoriasAcademicas = default(EntityRef<TutoriasAcademicas>);
			this._Estudiantes = default(EntityRef<Estudiantes>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTutoriaAcademicaestudiante", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int IDTutoriaAcademicaestudiante
		{
			get
			{
				return this._IDTutoriaAcademicaestudiante;
			}
			set
			{
				if ((this._IDTutoriaAcademicaestudiante != value))
				{
					this.OnIDTutoriaAcademicaestudianteChanging(value);
					this.SendPropertyChanging();
					this._IDTutoriaAcademicaestudiante = value;
					this.SendPropertyChanged("IDTutoriaAcademicaestudiante");
					this.OnIDTutoriaAcademicaestudianteChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_IDTutoriaAcademica", DbType="Int")]
		public System.Nullable<int> IDTutoriaAcademica
		{
			get
			{
				return this._IDTutoriaAcademica;
			}
			set
			{
				if ((this._IDTutoriaAcademica != value))
				{
					if (this._TutoriasAcademicas.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnIDTutoriaAcademicaChanging(value);
					this.SendPropertyChanging();
					this._IDTutoriaAcademica = value;
					this.SendPropertyChanged("IDTutoriaAcademica");
					this.OnIDTutoriaAcademicaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Matricula", DbType="NVarChar(10)")]
		public string Matricula
		{
			get
			{
				return this._Matricula;
			}
			set
			{
				if ((this._Matricula != value))
				{
					if (this._Estudiantes.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnMatriculaChanging(value);
					this.SendPropertyChanging();
					this._Matricula = value;
					this.SendPropertyChanged("Matricula");
					this.OnMatriculaChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicasEstudiantes_ProblematicasAcademicas", Storage="_ProblematicasAcademicas", ThisKey="IDTutoriaAcademicaestudiante", OtherKey="IDTutoriaAcademicaEstudiante")]
		public EntitySet<ProblematicasAcademicas> ProblematicasAcademicas
		{
			get
			{
				return this._ProblematicasAcademicas;
			}
			set
			{
				this._ProblematicasAcademicas.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TutoriasAcademicas_TutoriasAcademicasEstudiantes", Storage="_TutoriasAcademicas", ThisKey="IDTutoriaAcademica", OtherKey="IDTutoriaAcademica", IsForeignKey=true)]
		public TutoriasAcademicas TutoriasAcademicas
		{
			get
			{
				return this._TutoriasAcademicas.Entity;
			}
			set
			{
				TutoriasAcademicas previousValue = this._TutoriasAcademicas.Entity;
				if (((previousValue != value) 
							|| (this._TutoriasAcademicas.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TutoriasAcademicas.Entity = null;
						previousValue.TutoriasAcademicasEstudiantes.Remove(this);
					}
					this._TutoriasAcademicas.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicasEstudiantes.Add(this);
						this._IDTutoriaAcademica = value.IDTutoriaAcademica;
					}
					else
					{
						this._IDTutoriaAcademica = default(Nullable<int>);
					}
					this.SendPropertyChanged("TutoriasAcademicas");
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Estudiantes_TutoriasAcademicasEstudiantes", Storage="_Estudiantes", ThisKey="Matricula", OtherKey="Matricula", IsForeignKey=true)]
		public Estudiantes Estudiantes
		{
			get
			{
				return this._Estudiantes.Entity;
			}
			set
			{
				Estudiantes previousValue = this._Estudiantes.Entity;
				if (((previousValue != value) 
							|| (this._Estudiantes.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Estudiantes.Entity = null;
						previousValue.TutoriasAcademicasEstudiantes.Remove(this);
					}
					this._Estudiantes.Entity = value;
					if ((value != null))
					{
						value.TutoriasAcademicasEstudiantes.Add(this);
						this._Matricula = value.Matricula;
					}
					else
					{
						this._Matricula = default(string);
					}
					this.SendPropertyChanged("Estudiantes");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicasEstudiantes = this;
		}
		
		private void detach_ProblematicasAcademicas(ProblematicasAcademicas entity)
		{
			this.SendPropertyChanging();
			entity.TutoriasAcademicasEstudiantes = null;
		}
	}
}
#pragma warning restore 1591
